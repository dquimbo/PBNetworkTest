#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.8.1 (swiftlang-5.8.0.124.5 clang-1403.0.22.11.100)
#ifndef PBNETWORK_SWIFT_H
#define PBNETWORK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreLocation;
@import Foundation;
@import ObjectiveC;
@import Realm.Swift;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="PBNetwork",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;
@class NSDate;
@class PBLocation;
@class PBDevice;

SWIFT_CLASS("_TtC9PBNetwork6Device")
@interface Device : RealmSwiftObject
@property (nonatomic, readonly, copy) NSString * _Null_unspecified macAddress;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly, copy) NSDate * _Nullable lastSeen;
@property (nonatomic, readonly, strong) PBLocation * _Nullable lastLocationDevice;
@property (nonatomic, readonly, strong) PBLocation * _Nullable lastLocationDeviceFound;
@property (nonatomic, readonly) BOOL inRange;
@property (nonatomic, readonly) BOOL isLost;
@property (nonatomic, readonly, copy) NSString * _Nullable tag;
@property (nonatomic, readonly) NSInteger volume;
@property (nonatomic, readonly) NSInteger soundEnum;
@property (nonatomic, readonly, copy) NSString * _Nonnull typeAsString;
@property (nonatomic, readonly, strong) PBDevice * _Nullable underlyingHardware;
+ (NSString * _Nullable)primaryKey SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) PBLocation * _Nullable lastLocation;
@property (nonatomic, readonly, strong) PBLocation * _Nullable lastLocationFound;
- (BOOL)setLastLocationFoundWithTimeStamp:(NSDate * _Nonnull)T latitude:(double)lat longitude:(double)long_ error:(NSError * _Nullable * _Nullable)error;
- (BOOL)specialActionActivated SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// Base class that other classes like <code>PBLoginManager</code> inherit from.
SWIFT_CLASS("_TtC9PBNetwork11PBNetworker")
@interface PBNetworker : NSObject
/// Initalizer for a new <code>PBNetworker</code> class
/// \param withConfiguration Must be initalized with a <code>PBConfiguration</code> object.
///
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9PBNetwork24PBAlexaNetworkController")
@interface PBAlexaNetworkController : PBNetworker
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class PBTrigger;
@class NSTimer;

/// Presents an image picker controller that allows the user to take a photo when the application is in the foreground. Otherwise, posts a notification that allows the user to open the app to the image picker controller after authenticating from the lock screen.
SWIFT_CLASS("_TtC9PBNetwork20PBCameraRemoteAction")
@interface PBCameraRemoteAction : RealmSwiftObject
/// Variable that tells you if the front or back camera has been selected as a source to take a selfie.
@property (nonatomic, readonly) BOOL usesFrontCamera;
/// The count-down duration that the user would like the camera to wait to take a photo. Default is 3 seconds
@property (nonatomic, readonly) NSInteger countdownDuration;
/// Variable that tells you the state of the action
@property (nonatomic, readonly) BOOL enabled;
@property (nonatomic, readonly, strong) PBTrigger * _Nullable trigger;
/// Convenience initalizer that fails if the device does not have camera equipment.
/// -Paramaters:
/// -usesFrontCamera: If set to true the selfie will be taken with the front (screen side) camera. If false, it will be taken with the back (higher resolution) camera.
/// -countdownDuration: Conveniently initalize with a countdown duration. The default value for the countdown is 3 seconds.
- (nullable instancetype)initWithUsesFrontCamera:(BOOL)usesFrontCamera countdownDuration:(NSInteger)countdownDuration;
/// Function that is used to set the camera the user want the selfie to be taken from.
/// -Paramaters:
/// -newValue: The boolean that represents which camera to use. True means the screen side camera and false is the back side (higher resolution) camera.
- (BOOL)useFrontCamera:(BOOL)newValue error:(NSError * _Nullable * _Nullable)error;
/// Function that lets the user set the desired countdown duration.
/// -Paramaters:
/// -newValue: The number in seconds that the device will wait to take the picture from the specified camera.
- (BOOL)setCountdownDuration:(NSInteger)newValue error:(NSError * _Nullable * _Nullable)error;
- (void)run;
- (void)countedDown:(NSTimer * _Nonnull)sender;
/// Function that will enable and disable the action
/// -paramaters:
/// -enable: The boolean value that will change and then represent the state of the action.
- (BOOL)enabled:(BOOL)enable error:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class PBTwilioSMSSendAction;

SWIFT_CLASS("_TtC9PBNetwork9PBContact")
@interface PBContact : RealmSwiftObject
@property (nonatomic, readonly, copy) NSString * _Nullable phoneNumber;
@property (nonatomic, readonly, copy) NSString * _Nullable countryCode;
@property (nonatomic, readonly, strong) PBTwilioSMSSendAction * _Nullable action;
- (BOOL)addPhoneNumberWithNewNumber:(NSString * _Nonnull)n error:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURL;

SWIFT_CLASS("_TtC9PBNetwork8PBCoupon")
@interface PBCoupon : RealmSwiftObject
@property (nonatomic, readonly, copy) NSString * _Nullable title;
@property (nonatomic, readonly, copy) NSString * _Nullable advertisement;
@property (nonatomic, readonly, copy) NSString * _Nullable deal;
@property (nonatomic, readonly, copy) NSString * _Nullable image_url;
@property (nonatomic, readonly, copy) NSString * _Nullable redirect_url;
@property (nonatomic, readonly, copy) NSString * _Nullable local_image_url;
@property (nonatomic, readonly) BOOL read;
@property (nonatomic, readonly, copy) NSDate * _Nullable expires;
@property (nonatomic, readonly, copy) NSURL * _Nullable localImage;
@property (nonatomic, readonly, copy) NSURL * _Nullable remoteImage;
@property (nonatomic, readonly, copy) NSURL * _Nullable redirectURL;
- (nullable instancetype)initWithJSONPackage:(NSDictionary<NSString *, id> * _Nonnull)JSON;
- (void)crushJSON:(NSDictionary<NSString *, id> * _Nonnull)JSON;
- (NSDictionary<NSString *, id> * _Nonnull)siphonJSON SWIFT_WARN_UNUSED_RESULT;
- (BOOL)markAsReadAndReturnError:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Action that lets you interact with the Pebblebee IFTTT chanel.
SWIFT_CLASS("_TtC9PBNetwork13PBIFTTTAction")
@interface PBIFTTTAction : RealmSwiftObject
+ (NSString * _Nullable)primaryKey SWIFT_WARN_UNUSED_RESULT;
/// Variable that tells you if the action is enabled or disabled
@property (nonatomic, readonly) BOOL enabled;
@property (nonatomic, readonly, strong) PBTrigger * _Nullable trigger;
/// Function that will run the action. Look for the ‘PBIFTTTCompleteNotification’ to receive a notification that lets you know if the request completed successfully or not.
- (void)run;
/// Function that will enable and disable the action
/// -paramaters:
/// -enable: The boolean value that will change and then represent the state of the action.
- (BOOL)enabled:(BOOL)enable error:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9PBNetwork10PBLocation")
@interface PBLocation : RealmSwiftObject
@property (nonatomic, readonly, copy) NSDate * _Null_unspecified timeStamp;
@property (nonatomic, readonly) double timeStampSeconds;
@property (nonatomic, readonly) double timeStampMilliseconds;
@property (nonatomic, readonly, copy) NSString * _Nonnull timeAgo;
@property (nonatomic, readonly) BOOL uploaded;
@property (nonatomic, readonly) BOOL historic;
@property (nonatomic, readonly, copy) NSString * _Nullable locationDescription;
@property (nonatomic, readonly) CLLocationCoordinate2D coordinates;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull inRangeDevicesArray;
- (void)updateLocationWithTimeStamp:(NSDate * _Nonnull)T latitude:(double)lat longitude:(double)long_;
- (NSDictionary<NSString *, id> * _Nonnull)getJSONStructure SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nonnull)buildJSONWithStartIndex:(NSInteger)startDevice endIndex:(NSInteger)endDevice SWIFT_WARN_UNUSED_RESULT;
- (void)pullLocationDescriptionWithCompletion:(void (^ _Nonnull)(NSString * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9PBNetwork20PBLocationController")
@interface PBLocationController : PBNetworker
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBLocationController * _Nonnull shared;)
+ (PBLocationController * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) NSInteger numberOfAllowedLocationPoints;
@property (nonatomic, readonly, copy) NSArray<PBLocation *> * _Nonnull locationList;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSArray<PBLocation *> * _Nonnull)getLocations SWIFT_WARN_UNUSED_RESULT;
@end


/// Class that lets you handle the Pebblebee login flow.
SWIFT_CLASS("_TtC9PBNetwork14PBLoginManager")
@interface PBLoginManager : PBNetworker
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Controls music playback via the Music app shared session.
SWIFT_CLASS("_TtC9PBNetwork21PBMusicPlaybackAction") SWIFT_AVAILABILITY(ios,introduced=9.3)
@interface PBMusicPlaybackAction : RealmSwiftObject
/// Variable that tells you if the action is enabled or disabled
@property (nonatomic, readonly) BOOL enabled;
@property (nonatomic, readonly, strong) PBTrigger * _Nullable trigger;
/// ///The function that will run the action.
- (void)run;
/// Function that will enable and disable the action
/// -paramaters:
/// -enable: The boolean value that will change and then represent the state of the action.
- (BOOL)enabled:(BOOL)enable error:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// Calls a phone number if the application is active. Otherwise, posts a notification that allows the user to make the call after authenticating from the lock screen.
SWIFT_CLASS("_TtC9PBNetwork17PBPhoneCallAction")
@interface PBPhoneCallAction : RealmSwiftObject
+ (NSString * _Nullable)primaryKey SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull recipient;
@property (nonatomic, readonly, copy) NSString * _Nullable phoneNumberURLString;
/// Variable that tells you if the action is enabled or disabled
@property (nonatomic, readonly) BOOL enabled;
@property (nonatomic, readonly, strong) PBTrigger * _Nullable trigger;
/// Initialize a new phone call action with the specified recipient. This initializer will fail if the value passed as a parameter does not contain a valid phone number.
/// \param withRecipient The phone number to call.
///
- (nullable instancetype)initWithRecipient:(NSString * _Nullable)newValue;
/// This function allows you to set the recipient phone number. If the value passed as the parameter is not a valid phone number, an error will be thrown.
/// \param newValue The number that you want to replace the current number with
///
/// \param completion A completion handle that will tell you if we were able to validate and save the phone number.
///
- (void)setRecipient:(NSString * _Nonnull)newValue completion:(void (^ _Nonnull)(BOOL))completion;
/// Funciton that will run the action. If the application is not in the active state the action will generate a UINotificaiton that, if handled by the frameworks ‘PBUser.handleNotification(_ theNotification)’ will run the action when opened through the notification.
- (void)run;
/// Function that will enable and disable the action
/// -paramaters:
/// -enable: The boolean value that will change and then represent the state of the action.
- (BOOL)enabled:(BOOL)enable error:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSNotification;

SWIFT_CLASS("_TtC9PBNetwork8PBPlayer")
@interface PBPlayer : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)audioSessionRouteChanged:(NSNotification * _Nonnull)notification;
- (void)audioSessionInterrupted:(NSNotification * _Nonnull)notification;
@end


/// Plays a sound from the speakers of the user’s iOS device. Used to help the user find their iOS device when it is nearby.
/// important:
/// To support audio playback in the background, you must include the <code>audio</code> value to the <code>UIBackgroundModes</code> key in your information property list file.
SWIFT_CLASS("_TtC9PBNetwork21PBSoundPlaybackAction")
@interface PBSoundPlaybackAction : RealmSwiftObject
+ (NSString * _Nullable)primaryKey SWIFT_WARN_UNUSED_RESULT;
/// Varible that flags if the action should set the master volume of the app to 100%. Default is true.
@property (nonatomic, readonly) BOOL overrideMasterVolume;
/// Variable that flags if the action should route sound to the main speaker or not. The Default is true.
@property (nonatomic, readonly) BOOL routeToMainSpeaker;
/// Variable that flags if the action should respect the mute switch on the side of the phone. Default is true.
@property (nonatomic, readonly) BOOL ignoreMuteSwitch;
/// Variable that tells you if the action is enabled or disabled
@property (nonatomic, readonly) BOOL enabled;
@property (nonatomic, readonly, strong) PBTrigger * _Nullable trigger;
/// Function that lets you change the value of the ‘overrideMasterVolume’ property
/// -paramaters:
/// -override: The boolean that represents if you want the action to set the phones master volume to 100% or not.
- (BOOL)overrideMasterVolume:(BOOL)override error:(NSError * _Nullable * _Nullable)error;
/// Function that lets you change the value of the ‘routeToMainSpeaker’ property
/// -paramaters:
/// -setToSpeaker: The boolean that represents what you want the action to do regarding respecting the mute switch. True will not respect the switch.
- (BOOL)routeToMainSpeaker:(BOOL)setToSpeaker error:(NSError * _Nullable * _Nullable)error;
/// Function that lets you change the value of the ‘ignoreMuteSwitch’ property
/// -paramaters:
/// -ignoreSwitch: The boolean that represents what you want the action to do regarding respecting the mute switch. True will not respect the switch.
- (BOOL)ignoreMuteSwitch:(BOOL)ignoreSwitch error:(NSError * _Nullable * _Nullable)error;
- (void)runWithRawTriggerType:(NSInteger)rawTriggerType device:(Device * _Nullable)device;
/// Function that will enable and disable the action
/// -paramaters:
/// -enable: The boolean value that will change and then represent the state of the action.
- (BOOL)enabled:(BOOL)enable error:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC9PBNetwork7PBToken")
@interface PBToken : RealmSwiftObject
@property (nonatomic, copy) NSString * _Null_unspecified token;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9PBNetwork13PBTransaction")
@interface PBTransaction : RealmSwiftObject
@property (nonatomic, readonly, copy) NSDate * _Nullable transactionDate;
@property (nonatomic, readonly, copy) NSString * _Nullable transactionDateString;
@property (nonatomic, readonly, copy) NSString * _Nullable networkErrorDescription;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable url;
@property (nonatomic, readonly, copy) NSString * _Nullable requestMethod;
@property (nonatomic, readonly, copy) NSString * _Nullable headers;
@property (nonatomic, readonly, copy) NSString * _Nullable postBody;
@property (nonatomic, readonly, copy) NSString * _Nullable responseJSON;
@property (nonatomic, readonly, copy) NSString * _Nullable responseStatusCode;
@property (nonatomic, readonly, copy) NSString * _Nullable responseRawString;
@property (nonatomic, readonly, copy) NSString * _Nullable errorRawString;
- (NSString * _Nonnull)getPretty SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class PBURLSessionAction;

SWIFT_CLASS("_TtC9PBNetwork9PBTrigger")
@interface PBTrigger : RealmSwiftObject
@property (nonatomic, readonly) BOOL enabled;
@property (nonatomic, readonly) BOOL fireNotification;
@property (nonatomic, readonly, strong) Device * _Nullable device;
@property (nonatomic, readonly, copy) NSString * _Nullable conditionDescription;
@property (nonatomic, readonly) BOOL smartMode;
@property (nonatomic, readonly, strong) PBSoundPlaybackAction * _Nullable soundAction;
@property (nonatomic, readonly, strong) PBMusicPlaybackAction * _Nullable musicPlaybackAction;
@property (nonatomic, readonly, strong) PBCameraRemoteAction * _Nullable cameraRemoteAction;
@property (nonatomic, readonly, strong) PBPhoneCallAction * _Nullable phoneCallAction;
@property (nonatomic, readonly, strong) PBTwilioSMSSendAction * _Nullable twilioAction;
@property (nonatomic, readonly, strong) PBIFTTTAction * _Nullable iftttAction;
@property (nonatomic, readonly, strong) PBURLSessionAction * _Nullable urlAction;
@property (nonatomic, readonly, copy) NSDate * _Nullable phoneLastMoved;
- (void)triggerSpecialAction;
- (void)triggerTrigger;
- (BOOL)updateConditionStringAndReturnError:(NSError * _Nullable * _Nullable)error;
- (void)setAboveTempThreshHoldWithTemp:(NSInteger)t;
- (void)setBelowTempThreshHoldWithTemp:(NSInteger)t;
- (void)setCalibrationStoreWithTemp:(NSInteger)t;
- (BOOL)enableWithEnable:(BOOL)e error:(NSError * _Nullable * _Nullable)error;
- (void)SetPhoneLastMovedWithPhoneLastMovedInput:(NSDate * _Nonnull)lastMoved;
- (BOOL)smartModeWithSmartModeOn:(BOOL)smartModeOn error:(NSError * _Nullable * _Nullable)error;
- (BOOL)setFireNotificationWithFireNotification:(BOOL)fire error:(NSError * _Nullable * _Nullable)error;
- (BOOL)lazyLoadSoundActionOnceWithSoundAction:(PBSoundPlaybackAction * _Nullable)action error:(NSError * _Nullable * _Nullable)error;
- (BOOL)lazyLoadMusicActionOnceWithTheAction:(PBMusicPlaybackAction * _Nullable)action error:(NSError * _Nullable * _Nullable)error;
- (BOOL)lazyLoadCameraActionOnceWithTheAction:(PBCameraRemoteAction * _Nullable)action error:(NSError * _Nullable * _Nullable)error;
- (BOOL)lazyLoadPhoneActionOnceWithTheAction:(PBPhoneCallAction * _Nullable)action error:(NSError * _Nullable * _Nullable)error;
- (BOOL)lazyLoadTwilioActionOnceWithTheAction:(PBTwilioSMSSendAction * _Nullable)action error:(NSError * _Nullable * _Nullable)error;
- (BOOL)lazyLoadIFTTTActionOnceWithTheAction:(PBIFTTTAction * _Nullable)action error:(NSError * _Nullable * _Nullable)error;
- (BOOL)lazyLoadURLActionOnceWithTheAction:(PBURLSessionAction * _Nullable)action error:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// Sends a preset SMS message using the Twilio Web service. The message body can be set programmatically using the <code>senderInfo</code>, <code>drivingRouteDescription</code>, and <code>message</code> properties, or configured by the user.
SWIFT_CLASS("_TtC9PBNetwork21PBTwilioSMSSendAction")
@interface PBTwilioSMSSendAction : RealmSwiftObject
+ (NSString * _Nullable)primaryKey SWIFT_WARN_UNUSED_RESULT;
/// The main content of the SMS message, typically inputted by the user.
@property (nonatomic, readonly, copy) NSString * _Nullable message;
/// Information about the sender and the services used to send the message.
@property (nonatomic, readonly, copy) NSString * _Nullable senderInfo;
/// A description of the route from the sender’s current location to their destination.
@property (nonatomic, readonly, copy) NSString * _Nonnull drivingRouteDescription;
/// Added to avoid crash.
+ (NSArray<NSString *> * _Nonnull)ignoredProperties SWIFT_WARN_UNUSED_RESULT;
/// The human readable description of the destination that the user has selected they want included in the text.
@property (nonatomic, readonly, copy) NSString * _Nullable destinationDescription;
/// Another possible componenet to the text message. This flag tells the action to append a map link to the users current location in the body of the text.
@property (nonatomic, readonly) BOOL includeCurrentLocationMapLink;
/// Variable that tells you if the action is enabled or disabled
@property (nonatomic, readonly) BOOL enabled;
@property (nonatomic, readonly, strong) PBTrigger * _Nullable trigger;
/// Initialize a Twilio SMS send action. This initializer will fail if the value passed as a parameter does not contain a valid phone number.
/// \param recipient The phone number of the intended recipient.
///
/// \param message The main content message to send.
///
/// \param senderInfo The “header” that you want to appear at the top of the text message. To explain further, the messaging service we use (Twilio) will send the text from a phone number that Pebblebee owns. The header information is necessary to let the recipient know who sent the message. We recommend a format like this : “From: ‘name’ sms:‘2062349019’”
///
- (nullable instancetype)init:(NSArray<NSString *> * _Nonnull)withRecipients message:(NSString * _Nullable)message senderInfo:(NSString * _Nullable)senderInfo;
- (BOOL)addRecipient:(NSString * _Nonnull)newValue error:(NSError * _Nullable * _Nullable)error;
- (BOOL)setIncludeLocationWithIncludeLocation:(BOOL)include error:(NSError * _Nullable * _Nullable)error;
- (void)removeRecipientWithRecipientToRemove:(PBContact * _Nonnull)r completion:(void (^ _Nonnull)(BOOL))completion;
- (BOOL)setMessage:(NSString * _Nonnull)newValue error:(NSError * _Nullable * _Nullable)error;
- (BOOL)setSenderInfo:(NSString * _Nonnull)newValue error:(NSError * _Nullable * _Nullable)error;
- (BOOL)removeDestinationAndReturnError:(NSError * _Nullable * _Nullable)error;
- (BOOL)setDestinationWithNewDestination:(CLLocationCoordinate2D)d error:(NSError * _Nullable * _Nullable)error;
- (void)run;
/// Function that will enable and disable the action
/// -paramaters:
/// -enable: The boolean value that will change and then represent the state of the action.
- (BOOL)enabled:(BOOL)enable error:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSXMLParser;

@interface PBTwilioSMSSendAction (SWIFT_EXTENSION(PBNetwork)) <NSXMLParserDelegate>
- (void)parser:(NSXMLParser * _Nonnull)parser didStartElement:(NSString * _Nonnull)elementName namespaceURI:(NSString * _Nullable)namespaceURI qualifiedName:(NSString * _Nullable)qName attributes:(NSDictionary<NSString *, NSString *> * _Nonnull)attributeDict;
- (void)parser:(NSXMLParser * _Nonnull)parser foundCharacters:(NSString * _Nonnull)string;
- (void)parser:(NSXMLParser * _Nonnull)parser didEndElement:(NSString * _Nonnull)elementName namespaceURI:(NSString * _Nullable)namespaceURI qualifiedName:(NSString * _Nullable)qName;
- (void)parser:(NSXMLParser * _Nonnull)parser parseErrorOccurred:(NSError * _Nonnull)parseError;
@end


/// Action that lets you configure and call a custom URL.
SWIFT_CLASS("_TtC9PBNetwork18PBURLSessionAction")
@interface PBURLSessionAction : RealmSwiftObject
+ (NSString * _Nullable)primaryKey SWIFT_WARN_UNUSED_RESULT;
/// This is the URL that you want to make an HTTP request to.
@property (nonatomic, readonly, copy) NSString * _Nullable requestURLString;
/// Variable that tells you if the action is enabled or disabled
@property (nonatomic, readonly) BOOL enabled;
@property (nonatomic, readonly, strong) PBTrigger * _Nullable trigger;
/// Function that lets you set a new URL
- (BOOL)newRequestURLWithNewURL:(NSString * _Nonnull)url error:(NSError * _Nullable * _Nullable)error;
- (void)run;
/// Function that will enable and disable the action
/// -paramaters:
/// -enable: The boolean value that will change and then represent the state of the action.
- (BOOL)enabled:(BOOL)enable error:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Represents a Pebblebee user
SWIFT_CLASS("_TtC9PBNetwork6PBUser")
@interface PBUser : RealmSwiftObject
/// This is the users name
@property (nonatomic, readonly, copy) NSString * _Nullable name;
/// This is initally the email the user used to log in. It can be changed afte the fact.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified email;
/// Variable that tells you if the <code>PBUser</code> has authenticated or not
@property (nonatomic, readonly) BOOL authenticated;
@property (nonatomic, strong) PBToken * _Nullable token;
@property (nonatomic, readonly, copy) NSString * _Nullable APNSSandboxToken;
@property (nonatomic, readonly, copy) NSString * _Nullable APNSToken;
- (nullable instancetype)initWithEmail:(NSString * _Nonnull)e;
/// Lets you update the users name. Takes care of parsing multiple names and cloud sync
/// \param n The users new name
///
- (void)updateNameWithNewName:(NSString * _Nonnull)n;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
